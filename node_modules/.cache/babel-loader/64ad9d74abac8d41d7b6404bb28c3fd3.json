{"ast":null,"code":"import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","map":{"version":3,"sources":["/Users/neal/Desktop/portfolio/game-blog-app/frontend/.yarn/$$virtual/@restart-hooks-virtual-88b2b63f01/0/cache/@restart-hooks-npm-0.3.25-51f10eb48c-1.zip/node_modules/@restart/hooks/esm/useForceUpdate.js"],"names":["useReducer","useForceUpdate","_useReducer","state","dispatch"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA;;;;;;;;;;;;;;;;;AAiBA,eAAe,SAASC,cAAT,GAA0B;AACvC;AACA;AACA,MAAIC,WAAW,GAAGF,UAAU,CAAC,UAAUG,KAAV,EAAiB;AAC5C,WAAO,CAACA,KAAR;AACD,GAF2B,EAEzB,KAFyB,CAA5B;AAAA,MAGIC,QAAQ,GAAGF,WAAW,CAAC,CAAD,CAH1B;;AAKA,SAAOE,QAAP;AACD","sourcesContent":["import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}"]},"metadata":{},"sourceType":"module"}