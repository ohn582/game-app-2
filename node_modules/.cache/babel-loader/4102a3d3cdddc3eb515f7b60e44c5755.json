{"ast":null,"code":"var _jsxFileName = \"/Users/neal/Desktop/portfolio/game-blog-app/frontend/src/container/Game.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport GameItem from '../components/GameItem';\nimport Form from '../components/Form';\nimport { connect } from 'react-redux';\nimport { fetchGames } from '../actions/index'; // import { addNewTodo } from '../actions/index'\n\nclass Game extends Component {\n  componentDidMount() {\n    this.props.fetchGames();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.sortClick = () => {\n      this.setState({\n        game: !this.state.game\n      });\n    };\n\n    this.state = {\n      game: [],\n      title: []\n    };\n  }\n\n  render() {\n    // const games = this.props.games.map((game, i) => <GameItem key={i} game={game} />)\n    let games = this.props.games.map((game, i) => /*#__PURE__*/React.createElement(GameItem, {\n      key: i,\n      game: game,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 55\n      }\n    }));\n\n    if (this.state.title === true) {\n      const tetrisGame = this.props.games.filter(game => game.title === \"tetris\");\n      games = tetrisGame.map((game, i) => /*#__PURE__*/React.createElement(GameItem, {\n        key: i,\n        game: game,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 49\n        }\n      }));\n    }\n\n    const gameSort = this.props.game.sort(function (a, b) {\n      if (a.title.toLowerCase() < b.title.toLowerCase()) return -1;\n      if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;\n      return 0;\n    });\n\n    if (this.state.game === true) {\n      gameSort.map((game, i) => /*#__PURE__*/React.createElement(GameItem, {\n        key: i,\n        game: game,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }\n      }));\n    } // debugger\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success my-2 my-sm-0\",\n      onClick: this.sortClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Sort\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-inline my-2 my-lg-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control mr-sm-2\",\n      type: \"text\",\n      placeholder: \"Search\",\n      \"aria-label\": \"Search\",\n      onChange: this.editSearchTerm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success my-2 my-sm-0\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, games), /*#__PURE__*/React.createElement(Form, {\n      handleOnSubmit: this.addNewTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // debugger\n  return {\n    games: state.games\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchGames\n})(Game);","map":{"version":3,"sources":["/Users/neal/Desktop/portfolio/game-blog-app/frontend/src/container/Game.js"],"names":["React","Component","GameItem","Form","connect","fetchGames","Game","componentDidMount","props","constructor","sortClick","setState","game","state","title","render","games","map","i","tetrisGame","filter","gameSort","sort","a","b","toLowerCase","editSearchTerm","addNewTodo","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../App.css';\nimport GameItem from '../components/GameItem'\nimport Form from '../components/Form'\nimport { connect } from 'react-redux'\nimport { fetchGames } from '../actions/index'\n\n\n// import { addNewTodo } from '../actions/index'\n\nclass Game extends Component {\n\n    componentDidMount() {\n        this.props.fetchGames()\n    }\n\n    constructor(props) { \n        super(props);   \n        this.state = { \n            game: [],\n            title: []\n        };\n    }\n\n    sortClick = () => {\n        this.setState({game: !this.state.game})\n    }\n\n    debugger\n\n    render() {\n        // const games = this.props.games.map((game, i) => <GameItem key={i} game={game} />)\n        let games = this.props.games.map((game, i) => <GameItem key={i} game={game} />)\n\n        if (this.state.title === true){\n            const tetrisGame = this.props.games.filter(game => game.title === \"tetris\")\n            games = tetrisGame.map((game, i) => <GameItem key={i} game={game} />)\n        }\n\n        const gameSort = this.props.game.sort(function (a, b) {\n            if (a.title.toLowerCase() < b.title.toLowerCase()) return -1;\n            if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;\n            return 0;\n        })\n\n        if (this.state.game === true) {\n            gameSort.map((game, i) => <GameItem key={i} game={game} />)\n        }\n\n     \n        // debugger\n        return (\n            <div>\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" onClick={this.sortClick}>Sort</button>\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.editSearchTerm}/>\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n                <div className=\"wrapper\">{games}</div>\n                <Form handleOnSubmit={this.addNewTodo} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    // debugger\n    return {\n        games: state.games\n    }\n}\n\nexport default connect(mapStateToProps, { fetchGames })(Game)\n\n\n\n"]},"metadata":{},"sourceType":"module"}