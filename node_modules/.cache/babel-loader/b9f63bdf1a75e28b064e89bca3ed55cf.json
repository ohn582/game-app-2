{"ast":null,"code":"var _jsxFileName = \"/Users/neal/Desktop/portfolio/game-blog-app/frontend/src/container/Review.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport ReviewItem from '../components/ReviewItem';\nimport ReviewForm from '../components/ReviewForm';\nimport { connect } from 'react-redux';\nimport { fetchReviews } from '../actions/index';\n\nclass Review extends Component {\n  componentDidMount() {\n    // this is where all of our fetch happens\n    this.props.fetchReviews();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      review: []\n    };\n  }\n\n  render() {\n    // console.log(this.props.review)\n    const reviews = this.props.reviews.map((review, i) => /*#__PURE__*/React.createElement(ReviewItem, {\n      key: i,\n      review: review,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 63\n      }\n    })); //you can keep the same attributes\n    // console.log(reviews)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, reviews), /*#__PURE__*/React.createElement(ReviewForm, {\n      handleOnSubmit: this.addNewReview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // debugger\n  return {\n    reviews: state.reviews\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchReviews\n})(Review);","map":{"version":3,"sources":["/Users/neal/Desktop/portfolio/game-blog-app/frontend/src/container/Review.js"],"names":["React","Component","ReviewItem","ReviewForm","connect","fetchReviews","Review","componentDidMount","props","constructor","state","review","render","reviews","map","i","addNewReview","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAE3BM,EAAAA,iBAAiB,GAAG;AAAE;AAClB,SAAKC,KAAL,CAAWH,YAAX;AACH;;AAEDI,EAAAA,WAAW,CAACD,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKE,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAGDC,EAAAA,MAAM,GAAG;AACL;AACA,UAAMC,OAAO,GAAG,KAAKL,KAAL,CAAWK,OAAX,CAAmBC,GAAnB,CAAuB,CAACH,MAAD,EAASI,CAAT,kBAAe,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,CAAjB;AAAoB,MAAA,MAAM,EAAEJ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,CAAhB,CAFK,CAEyF;AAC9F;;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BE,OAA1B,CADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,cAAc,EAAE,KAAKG,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAxB0B;;AA2B/B,MAAMC,eAAe,GAAGP,KAAK,IAAI;AAC7B;AACA,SAAO;AACHG,IAAAA,OAAO,EAAEH,KAAK,CAACG;AADZ,GAAP;AAGH,CALD;;AAOA,eAAeT,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,MAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport ReviewItem from '../components/ReviewItem'\nimport ReviewForm from '../components/ReviewForm'\nimport { connect } from 'react-redux'\nimport { fetchReviews } from '../actions/index'\n\nclass Review extends Component {\n\n    componentDidMount() { // this is where all of our fetch happens\n        this.props.fetchReviews()\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            review: []\n        }\n    }\n\n\n    render() {\n        // console.log(this.props.review)\n        const reviews = this.props.reviews.map((review, i) => <ReviewItem key={i} review={review} />) //you can keep the same attributes\n        // console.log(reviews)\n        return (\n            <div>\n                <div className=\"wrapper\">{reviews}</div>\n                <ReviewForm handleOnSubmit={this.addNewReview} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    // debugger\n    return {\n        reviews: state.reviews\n    }\n}\n\nexport default connect(mapStateToProps, { fetchReviews })(Review);\n\n"]},"metadata":{},"sourceType":"module"}